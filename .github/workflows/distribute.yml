name: Distribute application

on:
  push:
    tags:
      - '**'

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      # To ensure we can get the flutter versions, fixing a version unknown issue
      # https://github.com/subosito/flutter-action/issues/188
      - name: Fix flutter SDK folder permission
        run: git config --global --add safe.directory /tmp/flutter/--

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.1'
          channel: 'stable'

      - name: Write API keys
        env:
          API_KEY_JSON: ${{secrets.API_KEY_JSON}}
        run: echo $API_KEY_JSON > assets/data/apiConfiguration.json

      - name: Distribute iOS version
        env:
          FASTLANE_APPLE_ID: ${{secrets.FASTLANE_APPLE_ID}}
          FASTLANE_ITC_TEAM_ID: ${{secrets.FASTLANE_ITC_TEAM_ID}}
          FASTLANE_PROVISIONING_PROFILE: ${{secrets.FASTLANE_PROVISIONING_PROFILE}}
          FASTLANE_TEAM_ID: ${{secrets.FASTLANE_TEAM_ID}}
          FASTLANE_USER: ${{secrets.FASTLANE_USER}}
          APPSTORE_CONNECT_API_KEY: ${{secrets.APPSTORE_CONNECT_API_KEY}}
          FASTLANE_CODE_SIGNING_IDENTITY: ${{secrets.FASTLANE_CODE_SIGNING_IDENTITY}}
        run: |
          # we have to do build outside of fastlane, otherwise cocopods won't work
          flutter packages get
          flutter clean
          flutter build ios --release --no-codesign
          export FASTLANE_API_KEY_PATH=$RUNNER_TEMP/key.json
          echo -n "$APPSTORE_CONNECT_API_KEY" | base64 --decode --output $FASTLANE_API_KEY_PATH
          cd ios
          bundle exec fastlane ios beta --verbose
